version: '3.8'

services:
  # 后端服务
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: backend
    container_name: llm-backend
    ports:
      - "8000:8000"
    volumes:
      - ./models:/app/models
      - ./uploads:/app/uploads
      - ./logs:/app/logs
      - ./llm_backend.db:/app/llm_backend.db
    environment:
      - PYTHONUNBUFFERED=1
      - OLLAMA_HOST=host.docker.internal:11434
    networks:
      - llm-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 前端服务
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      target: frontend-server
    container_name: llm-frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - llm-network
    restart: unless-stopped

  # Redis缓存服务
  redis:
    image: redis:7-alpine
    container_name: llm-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - llm-network
    restart: unless-stopped

  # Nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: llm-nginx
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
      - frontend
    networks:
      - llm-network
    restart: unless-stopped

volumes:
  redis_data:

networks:
  llm-network:
    driver: bridge
